[gcode_macro WARMUP]
description: Stress Test
variable_maxd: 14142.14 ; = SQRT(2*maxy)
gcode:
  {% set min_loops = 2 %}
  {% set max_loops = params.LOOPS|default(3)|int %}
  {% if 'LOOPS' in params|upper %}
    {% if max_loops < min_loops %}
      {% set max_loops = min_loops %}
    {% endif %}
  {% endif %}
  {% set loop_cnt = max_loops %}
  {% set maxx = params.X_ACCEL_MAX|default(10000)|int %}
  {% set maxy = params.Y_ACCEL_MAX|default(10000)|int %}
  {% set max_x = (printer.toolhead.axis_maximum.x|int-5) %}
  {% set max_y = (printer.toolhead.axis_maximum.y|int-5) %}
  {% set loop_step_y = max_y//(loop_cnt-1) %}
  {% set loop_step_x = max_x//(loop_cnt-1) %}
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  SET_VELOCITY_LIMIT ACCEL={maxx} ACCEL_TO_DECEL={maxx/2}
  {% for number in range(10,max_y+11,loop_step_y) %}
    {% if number >= max_y %}
    {% set number = max_y %}
    {% endif %}
    G1 F{maxy} X10 Y{number}
    G1 F{maxx} X{max_x} Y{number}
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxy} ACCEL_TO_DECEL={maxy/2}
  {% for number in range(10,max_x+11,loop_step_y) %}
    {% if number >= max_x %}
    {% set number = max_x %}
    {% endif %}
    G1 F{maxy} X{number} Y{max_y}
    G1 F{maxy} X{number} Y10
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxd} ACCEL_TO_DECEL={maxd/2}
  {% for times in range(loop_cnt) %}
    G1 F{maxx} X10 Y10
    G1 F{maxd} X{max_x} Y{max_y}
    G1 F{maxx} X10 Y{max_y}
    G1 F{maxd} X{max_x} Y10
    G1 F{maxy} X{max_x} Y{max_y}
    G1 F{maxd} X10 Y10
    G1 F{maxy} X10 Y{max_y}
    G1 F{maxd} X{max_x} Y10
  {% endfor %}
  SET_VELOCITY_LIMIT ACCEL={maxx} ACCEL_TO_DECEL={maxx/2}
  {% for times in range(loop_cnt) %}
    G1 F{maxy} X10 Y10
    G1 F{maxy} X10 Y{max_y}
    G1 F{maxx} X{max_x} Y{max_y}
    G1 F{maxy} X{max_x} Y10
    G1 F{maxx} X10 Y10
    G1 F{maxx} X{max_x} Y10
    G1 F{maxy} X{max_x} Y{max_y}
    G1 F{maxx} X10 Y{max_y}
  {% endfor %}
  G1 X{x_park} Y{y_park} F30000

[gcode_macro PID_BED]
description: Start Bed PID
gcode:
  G90
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G1 Z10 F600
  M106
  PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(70)}
  M107
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  G1 X{x_park} Y{y_park} F20000


[gcode_macro PID_HOTEND]
description: Start Hotend PID
gcode:
  G90
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  G1 Z10 F600
  M106
  PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(250)}
  M107
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  G1 X{x_park} Y{y_park} F20000

[gcode_macro TOGGLE_MAIN_LED]
variable_led_state: 0  # Переменная для состояния светодиода (0 - выключено, 1 - включено)
gcode:
    {% if printer["gcode_macro TOGGLE_MAIN_LED"].led_state == 0 %}
        SET_LED LED=main_led WHITE=1.0
        SET_GCODE_VARIABLE MACRO=TOGGLE_MAIN_LED VARIABLE=led_state VALUE=1
        M117 Подсветка включена
    {% else %}
        SET_LED LED=main_led WHITE=0.0
        SET_GCODE_VARIABLE MACRO=TOGGLE_MAIN_LED VARIABLE=led_state VALUE=0
        M117 Подсветка выключена
    {% endif %}

[gcode_macro SQUARE_PRINT]
description: Выставляет время прогрева стола в зависимости от размера печати
gcode:
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set x_min = (all_points | map(attribute=0) | min | default(0)) %}
    {% set x_max = (all_points | map(attribute=0) | max | default(0)) %}
    {% set y_min = (all_points | map(attribute=1) | min | default(0)) %}
    {% set y_max = (all_points | map(attribute=1) | max | default(0)) %}
    {% set x_lenght = [(x_max-x_min), 0] | max %}
    {% set y_lenght = [(y_max-y_min), 0] | max %}
    {% set x_lenght_round = x_lenght | int %}
    {% set y_lenght_round = y_lenght | int %}

    {% set area = x_lenght_round * y_lenght_round %}
    {% set max_lenght = [x_lenght_round, y_lenght_round] | max | int %}
    
    #{% set max_lenght = [x_lenght_round, y_lenght_round] | max %}
    
    RESPOND TYPE=command MSG="Размеры: X={x_lenght_round} мм, Y={y_lenght_round} мм, Площадь={area} мм². Максимальный размер: {max_lenght}."
    RUN_SQUARE_PRINT_HEATING MAX_LENGHT={max_lenght}


[gcode_macro RUN_SQUARE_PRINT_HEATING]
description: "Прогревает стол в зависимости от размера"
gcode:
    ; Получаем значение max_lenght, если оно не передано — используем значение по умолчанию (0)
    {% set max_lenght = params.MAX_LENGHT | default(0) | int %}
    #RESPOND TYPE=command MSG={max_lenght}
    {% if max_lenght < printer['gcode_macro _global_var'].heat_soak_lenght_small | int %}
        {% set heatsoak_time = printer['gcode_macro _global_var'].heat_soak_time_small | int %}
        RESPOND TYPE=command MSG="Размер малый, прогреваем недолго."
    {% elif max_lenght < printer['gcode_macro _global_var'].heat_soak_lenght_normal | int %}
        {% set heatsoak_time = printer['gcode_macro _global_var'].heat_soak_time_normal | int %}
        RESPOND TYPE=command MSG="Размер средний, прогреваем стандартно."
    {% else %}
        {% set heatsoak_time = printer['gcode_macro _global_var'].heat_soak_time_big | int %}
        RESPOND TYPE=command MSG="Размер большой, прогреваем долго."
    {% endif %}
    {% if printer['output_pin Heat_Bed_timer'].value == 1 %}   #Если переключатель греть не стоит то не прогреваем
      M117 Short Heat Soak
      RESPOND TYPE=command MSG="Время прогрева: { heatsoak_time } мин."
      G4 P{heatsoak_time * 60000} # pause for x number of minute(s) (see variable_heat_soak_time)  

    {% endif %}
    ; Выводим сообщение о времени прогрева
    
[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True

[gcode_macro MATERIAL_SELECT]
variable_material: "PETG"
gcode:
  {% set material = params.MATERIAL|default('PETG')|string %}
  RESPOND TYPE=command MSG="Выбран материал: {material}"
  {% if material == "PLA" %}
    PID_PROFILE LOAD=PETG HEATER=extruder KEEP_TARGET=1
  {% elif material == "ABS" %}
    PID_PROFILE LOAD=ABS_NOCOOL HEATER=extruder KEEP_TARGET=1
  {% elif material == "PETG" %}
    PID_PROFILE LOAD=PETG HEATER=extruder KEEP_TARGET=1
  {% else %}
    ; По умолчанию PID для PETG
    PID_PROFILE LOAD=PETG HEATER=extruder KEEP_TARGET=1
  {% endif %}

