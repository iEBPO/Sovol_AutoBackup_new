[mcu scanner]
#canbus_uuid: 0ca8d67388c2 
    serial: /dev/serial/by-id/usb-Cartographer_614e_1A000A000343303459323220-if00
    is_non_critical: true
#    adjust to suit your scanner, if using usb change to serial

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1
axes_map: x, -y, -z

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 23.4                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.005
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
speed: 15
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[bed_mesh]
zero_reference_position: 177.5, 177.5    
#    set this to the middle of your bed
speed: 700
#    movement speed of toolhead during bed mesh
horizontal_move_z: 2
#    height of scanner during bed mesh scan
mesh_min: 30, 36
#    start point of bed mesh [X, Y]
mesh_max: 325, 300
#    end point of bed mesh [X, Y]
probe_count: 30, 30
algorithm: bicubic
adaptive_margin: 10
fade_start: 1
fade_end: 20
fade_target: 0


[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[homing_override]
gcode:
  LED_BLUE
  # Move 5 up, just in case (this is our safety zhop, this needs 'set_position_z: 0' below)
  G91 ; set relative positioning
  G0 Z10 F2000 ; 10 up zhop
  {% if not rawparams or 'Y' in rawparams %}
    {action_respond_info('Homing Y')}
    G28 Y
    G90 ; set absolute positioning
    G0 Y177.5 F12000 ; return to center
    M400 ; Wait for move to finish
  {% endif %}
  {% if not rawparams or 'X' in rawparams %}
    {action_respond_info('Homing X')}
    G28 X
    G90 ; set absolute positioning
    G0 X177.5 F12000 ; return to center
    M400 ; Wait for move to finish
  {% endif %}
  {% if not rawparams or 'Z' in rawparams %}
    {action_respond_info('Homing Z')}
    G90 ; set absolute positioning
    G0 X177.5 Y154.1 F12000 ; return to center, please add your offsets manually if you want to
    G28 Z
    G91 ; set relative positioning
    G0 Z5 F2000 ; 5mm up
    M400 ; Wait for move to finish
  {% endif %}
  G90 ; set absolute positioning
  LED_GREEN
axes: xyz
set_position_z: 0 # This forces the z position to be at 0 when we start homing, so we can move the Z up before homing.

#[safe_z_home]
#home_xy_position: 177.5, 177.5
# Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
#z_hop: 10

[gcode_macro CARTOGRAPHER_ESTIMATE_BACKLASH_LOOP]
description: Measuring CARTOGRAPHER_ESTIMATE_BACKLASH in each corner
gcode:
  {% set count = params.COUNT|default(3)|int %}  # Количество повторений (по умолчанию 3)
  {% set height = params.HEIGHT|default(30)|float %}  # Высота перемещения (по умолчанию 30 мм)
  {% set points = [(30, 3), (30, 297), (325, 297), (325, 3)] %}
  {% set speed = 15000 %}  # Скорость перемещения (мм/мин)
  {% set z_speed = 2000 %}  # Скорость перемещения (мм/мин)
  {% set z_height = 30 %}  # Высота Z для перемещения

  {% if printer.toolhead.homed_axes|lower != "xyz" %}
    G28
  {% endif %}
  {% if printer.quad_gantry_level.applied|lower != 'true' %}
    M117 QGL
    QUAD_GANTRY_LEVEL # We use the _BASE variant here as not to remove the stock Sovol override (but we also don't want to use the Sovol override here)
    M117 Home Z after QGL
    G28 Z # And once again after QGL, important..
  {% endif %}
  LED_PURPLE
  G90
  {% for x, y in points %}
      G0 Z{z_height} F{z_speed}
      G0 X{x} Y{y} F{speed}  ; Перемещение к точке (x, y)
      G4 P500  ; Пауза 500 мс (0.5 секунды)
      {% for i in range(count) %}
          CARTOGRAPHER_ESTIMATE_BACKLASH
          G0 Z{height} F2000
      {% endfor %}
  {% endfor %}
  CENTER
  LED_WHITE

[gcode_macro PROBE_ACCURACY_LOOP]
description: Measuring PROBE_ACCURACY in each corner
gcode:
  {% set count = params.COUNT|default(1)|int %}  # Количество повторений (по умолчанию 3)
  {% set height = params.HEIGHT|default(30)|float %}  # Высота перемещения (по умолчанию 30 мм)
  {% set points = [(20, 5), (20, 300), (330, 300), (330, 5)] %}
  {% set speed = 15000 %}  # Скорость перемещения (мм/мин)
  {% set z_speed = 2000 %}  # Скорость перемещения (мм/мин)
  {% set z_height = 30 %}  # Высота Z для перемещения

  {% if printer.toolhead.homed_axes|lower != "xyz" %}
    G28
  {% endif %}
  {% if printer.quad_gantry_level.applied|lower != 'true' %}
    M117 QGL
    QUAD_GANTRY_LEVEL # We use the _BASE variant here as not to remove the stock Sovol override (but we also don't want to use the Sovol override here)
    M117 Home Z after QGL
    G28 Z # And once again after QGL, important..
  {% endif %}
  G90
  LED_PURPLE
  {% for x, y in points %}
      G0 Z{z_height} F{z_speed}
      G0 X{x} Y{y} F{speed}  ; Перемещение к точке (x, y)
      G4 P500  ; Пауза 500 мс (0.5 секунды)
      {% for i in range(count) %}
          PROBE_ACCURACY
          G0 Z{height} F2000
      {% endfor %}
  {% endfor %}
  CENTER
  LED_WHITE